<?php

// Set some helper constants
if ($_SERVER['HTTP_HOST'] == 'xarxanet.local') {
	define('AGENDA_URL', 'agenda-dev');
}
else {
	define('AGENDA_URL', 'agenda');
}
define('AGENDA_GRID_CLASSES', 'col-xs-12 col-sm-6 col-md-4 col-lg-3');

/**
 * Implements hook_menu().
 *
 * @return  $items
 */
function tothomweb_agenda_menu() {
		$items[AGENDA_URL] = array(
		'title' => 'Agenda',
		'page callback' => 'drupal_get_form', 
		'page arguments' => array('tothomweb_agenda_form'), 
		'access arguments' => array(), 
		'type' => MENU_NORMAL_ITEM,
	);
	return $items;
}

/**
 * Implements hook_form().
 *
 * @param	  $form
 * 					Array containing the form's basic data & structure.
 * 
 * @param	  $form_state
 * 					Array containing the form submitted data and other cool stuff.
 * 
 * @return  $form
 */
function tothomweb_agenda_form($form, &$form_state) {

	// Remove the default <h1>, as this page uses a custom one
	drupal_set_title('');

	/**
	 * Set the method of the form to 'GET', so the hook_form_submit() is not
	 * required in this form. 
	 * 
	 * In addition, some useless Drupal default parameters are removed from the url, by
	 * altering the form after it's built, in order to get cleaner urls. I.e.: Notice 
	 * that the '#name' attribute of the submit is set to an empty string,
	 * in order to avoid showing the 'op' paramenter in the url argument's list.
	 * 
	 * @see tothomweb_agenda_form_alter()
	 * 
	 * @see https://drupal.stackexchange.com/a/192381
	 */

	$form['#method'] = 'GET';
	$form['#after_build'][] = 'tothomweb_agenda_form_alter';

	// Filter's Area

	$form['filters_area'] = array(
		'#type' => 'container',
		'#attributes' => array(
			'class' => array('row'),
		),
		'#prefix' => '<div class="container agenda-header">',
		'#suffix' => '</div>',
	);

	$form['filters_area']['custom_title'] = array(
		'#type' => 'markup',
		'#markup' => '<h1 class="custom-title">' . t('Agenda') . '</h1>',
	);

	$form['filters_area']['filters_box'] = array(
		'#type' => 'container',
		'#attributes' => array(
			'id' => 'filters-box',
			'class' => array('filters-box'),
		),
		'#prefix' => '<div class="col-xs-12 col-sm-10 col-sm-offset-1 col-md-6 col-md-offset-3">',
		'#suffix' => '</div>',
	);

	$form['filters_area']['filters_box']['filters_header'] = array(
		'#type' => 'markup',
		'#markup' => tothomweb_agenda_build_type_filters_markup(),
	);

	$form['filters_area']['filters_box']['filters_body'] = array(
		'#type' => 'container',
		'#attributes' => array(
			'class' => array('row'),
		),
		'#prefix' => '<div class="filters-body">',
		'#suffix' => '</div>',
	);

	$form['filters_area']['filters_box']['filters_body']['search'] = array(
		'#type' => 'textfield', 
		'#title' => '<span class="sr-only">' . t('Cercar per paraula o paraules clau') . '</span>',
		'#attributes' => array(
			'placeholder' => t('Cercar per paraula clau'),
		),
		'#default_value' => (isset($_GET['search'])) ? $_GET['search'] : '', 
		'#size' => 60, 
		'#maxlength' => 128,
		'#prefix' => '<div class="col-xs-12 col-sm-4">',
		'#suffix' => '</div>',
	);

	$form['filters_area']['filters_box']['filters_body']['date'] = array(
		'#type' => 'textfield', 
		'#title' => '<span class="sr-only">' . t('Cercar per data') . '</span>',
		'#attributes' => array(
			'placeholder' => t('Cercar per data'),
		),
		'#default_value' => (isset($_GET['date'])) ? $_GET['date'] : date('d/m/Y', time()), 
		'#size' => 60, 
		'#maxlength' => 128,
		'#prefix' => '<div class="col-xs-12 col-sm-4">',
		'#suffix' => '</div>',
	);

	$form['filters_area']['filters_box']['filters_body']['location'] = array(
		'#type' => 'textfield', 
		'#title' => '<span class="sr-only">' . t('Cercar per municipi') . '</span>',
		'#attributes' => array(
			'placeholder' => t('Cercar per municipi'),
		),
		'#default_value' => (isset($_GET['location'])) ? $_GET['location'] : '', 
		'#size' => 60, 
		'#maxlength' => 128,
		'#prefix' => '<div class="col-xs-12 col-sm-4">',
		'#suffix' => '</div>',
	);

	$form['filters_area']['filters_box']['filters_footer'] = array(
		'#type' => 'container',
		'#attributes' => array(
			'class' => array('row'),
		),
		'#prefix' => '<div class="filters-footer">',
		'#suffix' => '</div>',
	);

	$form['filters_area']['filters_box']['filters_footer']['mode'] = array(
		'#type' => 'radios',
		'#title' => '<span class="sr-only">' . t('Selecciona la') . ' </span>' . t('Modalitat:') . ' <span class="sr-only">' . t('de l\'esdeveniment') . '</span>',
		'#default_value' => (isset($_GET['mode'])) ? $_GET['mode'] : 'all',
		'#options' => tothomweb_agenda_build_mode_options(),
		'#prefix' => '<div class="col-xs-12 col-sm-8">',
		'#suffix' => '</div>',
	);

	$form['filters_area']['filters_box']['filters_footer']['add_event'] = array(
		'#type' => 'markup',
		'#markup' => '<a class="add-event" href="/node/add/event"><img src="//xarxanet.org/sites/all/themes/xn17/assets/images/icon/icon-publish-red.svg">' . t('Publica un nou esdeveniment') . '</a>',
		'#weight' => 11, // Drupal's default value is 10
	);

	$form['filters_area']['filters_box']['filters_footer']['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Cercar'),
		'#prefix' => '<div class="col-xs-12 col-sm-4">',
		'#suffix' => '</div>',
	);

	// Results' Area

	$form['results_area'] = array(
		'#type' => 'container',
		'#attributes' => array(
			'id' => array('results'),
			'class' => array('row'),
		),
		'#prefix' => '<div class="container agenda-body">',
		'#suffix' => '</div>',
	);

	$form['results_area']['grid'] = array(
		'#type' => 'markup',
		'#markup' => tothomweb_agenda_query_results(),
	);

	if (AGENDA_URL == 'agenda-dev') {
		$form['livereload'] = array(
			'#type' => 'markup',
			'#markup' => '<script src="//xarxanet.local:35729/livereload.js"></script>',
		);
	}

	return $form;
}

/**
 * Implements hook_form_validate().
 */
function tothomweb_agenda_form_validate($form, &$form_state) {
	// Append validation clauses here...
}

/**
 * Helper function that build the query, given a set of url parameters.
 */
function tothomweb_agenda_query_results() {
	// Get parameters from the url
	$type = (isset($_GET['type']) && !empty($_GET['type'])) ? $_GET['type'] : 'all';
	$search = (isset($_GET['search']) && !empty($_GET['search'])) ? $_GET['search'] : null;
	$date = (isset($_GET['date']) && !empty($_GET['date'])) ? $_GET['date'] : null;
	$location = (isset($_GET['location']) && !empty($_GET['location'])) ? $_GET['location'] : null;
	$mode = (isset($_GET['mode']) && !empty($_GET['mode'])) ? $_GET['mode'] : 'all';
	// Buid the query
	$query = db_select('node', 'n')->extend('PagerDefault');
	$query->leftJoin('field_data_field_agenda_imatge', 'f1', 'f1.entity_id = n.nid');
	$query->leftJoin('file_managed', 'fm', 'fm.fid = f1.field_agenda_imatge_fid');
	$query->leftJoin('field_data_field_resum', 'f2', 'f2.entity_id = n.nid');
	$query->leftJoin('field_data_field_date_event', 'f3', 'f3.entity_id = n.nid');
	$query->leftJoin('field_data_field_event_type', 'f4', 'f4.entity_id = n.nid');
	$query->addField('n', 'nid', 'nid');
	$query->addField('n', 'title', 'title');
	$query->addField('fm', 'uri', 'image_src');
	$query->addField('f1', 'field_agenda_imatge_alt', 'image_alt');
	$query->addField('f2', 'field_resum_value', 'summary');
	$query->addField('f3', 'field_date_event_value', 'date_start');
	$query->addField('f3', 'field_date_event_value2', 'date_end');
	$query->addField('f4', 'field_event_type_value', 'type');
	$query->condition('n.type', 'event');
	$query->condition('n.status', 1);
	$results = $query->execute();
	// Manage the query results
	$items = array();
	foreach ($results as $row) {
		// Prepare data
		$node_alias = url(drupal_get_path_alias('node/' . $row->nid));
		$image_src = image_style_url('xn17_horitzontal', $row->image_src);
		$date_start = date('d-m-Y', strtotime($row->date_start));
		$date_end = date('d-m-Y', strtotime($row->date_end));
		$event_date = tothomweb_agenda_build_human_readable_date($row->date_start, $row->date_end);
		if ($row->type == 'Acte') {
			$taxonomy_link = AGENDA_URL . '?type=events';
		}
		else if ($row->type == 'Acte') {
			$taxonomy_link = AGENDA_URL . '?type=courses';
		}
		else {
			$taxonomy_link = '#';
		}
		// Build the output
		$output  = '<div class="event" data-node="node-' . $row->nid . '">';
		$output .= '<article>';
		$output .= '<div class="first">';
		$output .= '<figure>';
		$output .= '<a href="' . $node_alias . '">';
		$output .= '<img class="img-responsive" src="' . $image_src . '" alt="' . $row->image_alt . '" />';
		$output .= '</a>';
		$output .= '</figure>';
		$output .= '</div>';
		$output .= '<div class="last">';
		$output .= '<div class="event-dates">';
		$output .= $event_date;
		$output .= '</div>';
		$output .= '<header>';
		$output .= '<a href="' . $node_alias . '">';
		$output .= '<h2 class="event-title">' . $row->title . '</h2>';
		$output .= '</a>';
		$output .= '</header>';
		$output .= '<div class="event-category">';
		$output .= '<a class="page-link" href="' . AGENDA_URL . '">Agenda</a> ';
		$output .= '<span class="link-separator">&gt;</span> ';
		$output .= '<a class="taxonomy-link" href="' . $taxonomy_link . '">' . $row->type . '</a>';
		$output .= '</div>';
		$output .= '</div>';
		$output .= '</article>';
		$output .= '</div>';
		// Append output in a pre-renderable array
		$items[] = array(
			'data' => $output,
			'class' => array('bootstrap' => AGENDA_GRID_CLASSES),
		);
	}
	// Build the renderable array of the results
	$render_array['results'] = array(
		'#theme' => 'item_list',
		'#type' => 'ul',
		'#title' => '<span class="sr-only">' . t('Resultats de la cerca') . '</span>',
		'#items' => $items,
		'#attributes' => array('class' => 'row'),
	);
	// Build the renderable array of the pager
	$render_array['pager'] = array(
		'#theme' => 'pager'
	);
	return drupal_render($render_array);
}

/**
 * Implements hook_form_alter().
 * 
 * Remove some useless Drupal parameters from the url,
 * after the form has been built.
 *
 * @see https://drupal.stackexchange.com/a/192381
 *
 * @param   object  $form
 * 
 * @return  object  $form
 */
function tothomweb_agenda_form_alter($form) {
	unset($form['form_token']);
	unset($form['form_build_id']);
	unset($form['form_id']);
	return $form;
}

/**
 * Helper function that builds a small markup with the links
 * of the filters' header.
 */
function tothomweb_agenda_build_type_filters_markup() {
	// Set filter status by checking url parameters
	$all_status = (!isset($_GET['type']) || $_GET['type'] == 'all') ? ' active' : '';
	$events_status = (isset($_GET['type']) && $_GET['type'] == 'events') ? ' active' : '';
	$courses_status = (isset($_GET['type']) && $_GET['type'] == 'courses') ? ' active' : '';
	// Build the markup, including filters statuses
	$output  = '<div class="filters-header">';
	$output .= '<a class="type-filter' . $all_status . '" href="/' . AGENDA_URL . '?type=all">Tots</a>';
	$output .= '<a class="type-filter' . $events_status . '" href="/' . AGENDA_URL . '?type=events">Actes</a>';
	$output .= '<a class="type-filter' . $courses_status . '" href="/' . AGENDA_URL . '?type=courses">Cursos</a>';
	$output .= '</div>';
	return $output;
}

/**
 * Helper function that builds an array of options for
 * the 'Modalitat' radios.
 */
function tothomweb_agenda_build_mode_options() {
	$options  = array(
		'all' => t('Qualsevol'),
		'online' => t('En línia'),
	);
	return $options;
}

/**
 * Helper function that builds a date string in human-readable format,
 * given a start & end dates, passed as arguments.
 * 
 * @param 	$date_start
 * 					The initial date.
 * 
 * @param		$date_end
 * 					The end date.
 * 
 * @return	string 
 * 					A date in a human-readable format. 
 */
function tothomweb_agenda_build_human_readable_date($date_start, $date_end) {
	$date_start = strtotime($date_start);
	$date_end = strtotime($date_end);
	// Case #1: Different day, same month & same year
	if ((date('j', $date_start) != date('j', $date_end)) && (date('F', $date_start) == date('F', $date_end)) && (date('Y', $date_start) == date('Y', $date_end))) {
		$result_date = '';
		if (in_array(date('j', $date_start), [1, 11])) {
			$result_date .= 'De l\'';
		}
		else {
			$result_date .= 'Del ';
		}
		$result_date .= date('j', $date_start);
		if (in_array(date('j', $date_end), [1, 11])) {
			$result_date .= ' a l\'';
		}
		else {
			$result_date .= ' al ';
		}
		$result_date .= date('j', $date_end);
		if (in_array(date('n', $date_start), [4, 8, 10])) {
			$result_date .= ' d\'';
		}
		else {
			$result_date .= ' de ';
		}
		$result_date .= strtolower(t(date('F', $date_start)));
		$result_date .= ' de ';
		$result_date .= date('Y', $date_end);
	}
	// Case #2: Different months & same year
	else if ((date('F', $date_start) != date('F', $date_end)) && (date('Y', $date_start) == date('Y', $date_end))) {
		$result_date = '';
		if (in_array(date('j', $date_start), [1, 11])) {
			$result_date .= 'De l\'';
		}
		else {
			$result_date .= 'Del ';
		}
		$result_date .= date('j', $date_start);
		if (in_array(date('n', $date_start), [4, 8, 10])) {
			$result_date .= ' d\'';
		}
		else {
			$result_date .= ' de ';
		}
		$result_date .= strtolower(t(date('F', $date_start)));
		if (in_array(date('j', $date_end), [1, 11])) {
			$result_date .= ' a l\'';
		}
		else {
			$result_date .= ' al ';
		}
		$result_date .= date('j', $date_end);
		if (in_array(date('n', $date_end), [4, 8, 10])) {
			$result_date .= ' d\'';
		}
		else {
			$result_date .= ' de ';
		}
		$result_date .= strtolower(t(date('F', $date_end)));
		$result_date .= ' de ';
		$result_date .= date('Y', $date_end);
	}
	// Case #3: Same day, month & year
	else if ((date('j', $date_start) == date('j', $date_end)) && (date('F', $date_start) == date('F', $date_end)) && (date('Y', $date_start) == date('Y', $date_end))) {
		$result_date = '';
		if (in_array(date('j', $date_start), [1, 11])) {
			$result_date .= 'L\'';
		}
		else {
			$result_date .= 'El ';
		}
		$result_date .= date('j', $date_start);
		if (in_array(date('n', $date_start), [4, 8, 10])) {
			$result_date .= ' d\'';
		}
		else {
			$result_date .= ' de ';
		}
		$result_date .= strtolower(t(date('F', $date_start)));
		$result_date .= ' de ';
		$result_date .= date('Y', $date_end);
	}
	// Case #4: Different day, month & year (date format by default)
	else {
		$result_date = '';
		if (in_array(date('j', $date_start), [1, 11])) {
			$result_date .= 'De l\'';
		}
		else {
			$result_date .= 'Del ';
		}
		$result_date .= date('j', $date_start);
		if (in_array(date('n', $date_start), [4, 8, 10])) {
			$result_date .= ' d\'';
		}
		else {
			$result_date .= ' de ';
		}
		$result_date .= strtolower(t(date('F', $date_start)));
		$result_date .= ' de ';
		$result_date .= date('Y', $date_start);
		if (in_array(date('j', $date_end), [1, 11])) {
			$result_date .= ' a l\'';
		}
		else {
			$result_date .= ' al ';
		}
		$result_date .= date('j', $date_end);
		if (in_array(date('n', $date_end), [4, 8, 10])) {
			$result_date .= ' d\'';
		}
		else {
			$result_date .= ' de ';
		}
		$result_date .= strtolower(t(date('F', $date_end)));
		$result_date .= ' de ';
		$result_date .= date('Y', $date_end);
	}
	return $result_date;
}
