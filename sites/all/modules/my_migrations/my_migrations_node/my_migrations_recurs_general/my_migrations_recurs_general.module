<?php

/**
 * Implements hook_menu().
 */
function my_migrations_recurs_general_menu() {
  $items['api/export/node/recurs-general'] = array(
    'title' => 'Recurs general export',
    'page callback' => 'my_migrations_recurs_general_rest_api',
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Retrieves all the nodes.
 */
function my_migrations_recurs_general_rest_api() {
  $data = [];
  $query = db_select('node', 'n');
  $query->leftJoin('field_data_field_ambit_recurs', 'f1', 'f1.entity_id = n.nid');
  $query->leftJoin('taxonomy_term_data', 'f2', 'f2.tid = f1.field_ambit_recurs_tid');
  $query->leftJoin('field_data_field_agenda_imatge', 'f3', 'f3.entity_id = n.nid');
  $query->leftJoin('file_managed', 'f4', 'f4.fid = f3.field_agenda_imatge_fid');
  $query->leftJoin('field_data_field_autor', 'f5', 'f5.entity_id = n.nid');
  $query->leftJoin('field_data_field_resum', 'f6', 'f6.entity_id = n.nid');
  $query->leftJoin('field_data_body', 'f7', 'f7.entity_id = n.nid');
  $query->leftJoin('field_data_field_subtitols', 'f8', 'f8.entity_id = n.nid');
  $query->leftJoin('field_data_field_continguts', 'f9', 'f9.entity_id = n.nid');
  $query->leftJoin('field_data_field_imatge_emergent', 'f10', 'f10.entity_id = n.nid');
  $query->leftJoin('file_managed', 'f11', 'f11.fid = f10.field_imatge_emergent_fid');
  $query->leftJoin('field_data_field_video_emergent', 'f12', 'f12.entity_id = n.nid');
  $query->leftJoin('field_data_field_data_ordenacio', 'f13', 'f13.entity_id = n.nid');
  $query->leftJoin('url_alias', 'f14', 'f14.source = CONCAT(:str, n.nid)', array(':str'=>'node/'));
  $query->leftJoin('field_data_field_dpp', 'f15', 'f15.entity_id = n.nid');
  $query->leftJoin('field_data_field_dsp', 'f16', 'f16.entity_id = n.nid');
  $query->leftJoin('field_data_field_dpp_portal', 'f17', 'f17.entity_id = n.nid');
  $query->leftJoin('field_data_field_dsp_portal', 'f18', 'f18.entity_id = n.nid');
  $query->leftJoin('field_data_field_desp', 'f19', 'f19.entity_id = n.nid');
  $query->leftJoin('xmlsitemap', 'f20', 'f20.id = n.nid');
  $query->leftJoin('field_data_field_data_calculada', 'f21', 'f21.entity_id = n.nid');
  $query->leftJoin('location_instance', 'f22', 'f22.nid = n.nid');
  $query->leftJoin('location', 'f23', 'f23.lid = f22.lid');
  $query->leftJoin('field_data_field_vote', 'f24', 'f24.entity_id = n.nid');
  // $query->leftJoin('metatag', 'f25', 'f25.entity_id = n.nid');
  $query->leftJoin('field_data_field_usuari_autor', 'f26', 'f26.entity_id = n.nid');
  $query->leftJoin('field_data_taxonomy_vocabulary_1', 'f27', 'f27.entity_id = n.nid');
  $query->leftJoin('taxonomy_term_data', 'f28', 'f28.tid = f27.taxonomy_vocabulary_1_tid');
  $query->leftJoin('field_data_field_imatges', 'f29', 'f29.entity_id = n.nid');
  $query->leftJoin('file_managed', 'f30', 'f30.fid = f29.field_imatges_fid');
  $query->leftJoin('field_data_field_peu_de_foto', 'f31', 'f31.entity_id = n.nid AND f31.delta = f29.delta');
  $query->leftJoin('field_data_field_autoria', 'f32', 'f32.entity_id = f29.field_imatges_fid');
  $query->leftJoin('field_data_field_etiquetes', 'f33', 'f33.entity_id = n.nid');
  $query->leftJoin('field_data_field_file_image_alt_text', 'f34', 'f34.entity_id = f29.field_imatges_fid');
  $query->leftJoin('field_data_field_file_image_title_text', 'f35', 'f35.entity_id = f29.field_imatges_fid');
  $query->leftJoin('taxonomy_term_data', 'f36', 'f36.tid = f33.field_etiquetes_tid');

  // Node basic information (same one for all node exports)
  $query->addField('n', 'nid', 'nid');
  $query->addField('n', 'vid', 'vid');
  $query->addField('n', 'title', 'title');
  $query->addField('n', 'uid', 'uid');
  $query->addField('n', 'status', 'status');
  $query->addField('n', 'created', 'created');
  $query->addField('n', 'changed', 'changed');
  $query->addField('n', 'comment', 'comments');
  //Ambit
  $query->addField('f1', 'field_ambit_recurs_tid', 'ambit_tid');
  $query->addField('f2', 'name', 'ambit_name');
  // Main image
  $query->addField('f3', 'field_agenda_imatge_fid', 'main_img_fid');
  $query->addField('f3', 'field_agenda_imatge_alt', 'main_img_alt');
  $query->addField('f3', 'field_agenda_imatge_title', 'main_img_title');
  $query->addField('f4', 'filename', 'main_img_filename');
  $query->addField('f4', 'filemime', 'main_img_filemime');
  $query->addField('f4', 'uri', 'main_img_uri');
  // Autor
  $query->addField('f5', 'field_autor_value', 'autor');
  // Summary
  $query->addField('f6', 'field_resum_value', 'summary');
  $query->addField('f6', 'field_resum_format', 'summary_format');
  // Body and body summary
  $query->addField('f7', 'body_value', 'body');
  $query->addField('f7', 'body_summary', 'body_summary');
  $query->addField('f7', 'body_format', 'body_format');
  // Subtitles
  $query->addField('f8', 'field_subtitols_value', 'subtitle');
  // Contents
  $query->addField('f9', 'field_continguts_value', 'content');
  $query->addField('f9', 'field_continguts_format', 'contingut_format');
  // Pop-up image. NOTE: it seems that there are only some images from noticia_general at this table. Probably not necessary for resources.
  $query->addField('f10', 'field_imatge_emergent_fid', 'popup_img_fid');
  $query->addField('f10', 'field_imatge_emergent_alt', 'popup_img_alt');
  $query->addField('f10', 'field_imatge_emergent_title', 'popup_img_title');
  $query->addField('f11', 'filename', 'popup_img_filename');
  $query->addField('f11', 'filemime', 'popup_img_filemime');
  $query->addField('f11', 'uri', 'popup_img_uri');
  // Pop-up video
  $query->addField('f12', 'field_video_emergent_url', 'popup_video_url');
  // Order date
  $query->addField('f13', 'field_data_ordenacio_value', 'order_date');
  // URL alias
  $query->addField('f14', 'alias', 'url_alias');
  // Highlights. Probably it is something that is not useful as the nodes highlighted when we publish the new site will be different
  // Main highlight cover
  $query->addField('f15', 'field_dpp_value', 'main_highlight_cover');
  // Secondary highlight cover
  $query->addField('f16', 'field_dsp_value', 'secondary_highlight_cover');
  // Main highlight portal
  $query->addField('f17', 'field_dpp_portal_value', 'main_highlight_portal');
  // Secondary highlight portal
  $query->addField('f18', 'field_dsp_portal_value', 'secondary_highlight_portal');
  // Special highlight
  $query->addField('f19', 'field_desp_value', 'special_highlight');
  // xmlsitemap
  $query->addField('f20', 'status', 'xmlsitemap_included'); // Included just in case, although it seems to be the same value for all resources
  $query->addField('f20', 'priority', 'xmlsitemap_priority'); // Included just in case, although it seems to be the same value for all resources
  // Calculated date
  $query->addField('f21', 'field_data_calculada_value', 'calculated_date');
  // Location
  $query->addField('f23', 'lid', 'lid');
  $query->addField('f23', 'name', 'location_name');
  $query->addField('f23', 'street', 'location_street');
  $query->addField('f23', 'postal_code', 'location_pc');
  $query->addField('f23', 'city', 'location_city');
  $query->addField('f23', 'province', 'location_province');
  $query->addField('f23', 'country', 'location_country');
  $query->addField('f23', 'longitude', 'location_longitude');
  $query->addField('f23', 'latitude', 'location_latitude');
  $query->addField('f23', 'additional', 'location_additional');
  // Votes. Probably not useful, I can't see where this is used in the nodes that it is added
  $query->addField('f24', 'field_vote_rating', 'votes');
  // Metatags
  // $query->addField('f25', 'data', 'metatags');
  // Author field (text)
  $query->addField('f26', 'field_usuari_autor_value', 'author_text');
  // Tags
  $query->addField('f28', 'tid', 'tag_tid');
  $query->addField('f28', 'name', 'tag_name');
  // Secondary images
  $query->addField('f30', 'fid', 'secondary_img_fid');
  $query->addField('f30', 'filename', 'secondary_img_filename');
  $query->addField('f30', 'filemime', 'secondary_img_filemime');
  $query->addField('f30', 'uri', 'secondary_img_uri');
  $query->addField('f31', 'field_peu_de_foto_value', 'secondary_img_caption');
  $query->addField('f32', 'field_autoria_value', 'secondary_img_author');
  $query->addField('f36', 'name', 'secondary_img_tags');
  $query->addField('f34', 'field_file_image_alt_text_value', 'secondary_img_alt');
  $query->addField('f35', 'field_file_image_title_text_value', 'secondary_img_title');

  $query->condition('n.type', 'recurs_general');

  // Filter by node ID
  if (isset($_GET['nid'])) {
    $nid = $_GET['nid'];
    $query->condition('n.nid', $nid);
  }

   // Filter by a range of values
   if (isset($_GET['offset']) && isset($_GET['limit'])) {
    $offset = $_GET['offset'];
    $limit = $_GET['limit'];
    $query->range($offset, $limit);
  }

  $query->range(50, 1000); // Just for debugging purposes, REMOVE when done

  $query->orderBy('n.nid', 'DESC');
  $results = $query->execute();

  $nids = [];
  $data = [];
  foreach ($results as $row) {
    if (!in_array($row->nid,  $nids)) {
      // Build the node's basic data array
      $item = [
        'nid' => $row->nid,
        'vid' => $row->vid,
        'title' => $row->title,
        'uid' => $row->uid,
        'status' => $row->status,
        'created' => $row->created,
        'changed' => $row->changed,
        'comments' => $row->comments,
        // Ambit
        'ambit_tid' => $row->ambit_tid,
        'ambit_name' => $row->ambit_name,
        // Main image
        'main_image' => [
          'fid' => $row->main_img_fid,
          'alt' => $row->main_img_alt,
          'title' => $row->main_img_title,
          'filename' => $row->main_img_filename,
          'filemime' => $row->main_img_filemime,
          'uri' => $row->main_img_uri ? file_create_url($row->main_img_uri) : null,
        ],
        // Autor
        'autor' => $row->autor,
        //Summary
        'summary' => $row->summary,
        'summary_format' => $row->summary_format,
        // Body and body summary
        'body' => $row->body,
        'body_summary' => $row->body_summary,
        'body_format' => $row->body_format,
        //Subtitles
        'subtitles' => [],
        //Contents
        'contents' => [],
        // Pop-up image. NOTE: it seems that there are only some images from noticia_general at this table. Probably not necessary for resources.
        'popup_img' => [
          'fid' => $row-> popup_img_fid,
          'alt' => $row->popup_img_alt,
          'title' => $row->popup_img_title,
          'filename' => $row->popup_img_filename,
          'filemime' => $row->popup_img_filemime,
          'uri' => $row->popup_img_uri ? file_create_url($row->popup_img_uri) : null,
        ],
        // Pop-up video
        'popup_video' => $row->popup_video_url,
        // Order date
        'order_date' => $row->order_date,
        // Calculated date
        'calculated_date' => $row->calculated_date,
        // URL alias
        'url_alias' => $row->url_alias,
        // Highlights. Probably it is something that is not useful as the nodes highlighted when we publish the new site will be different
        'highlighted' => [
          'main_cover' => $row->main_highlight_cover,
          'secondary_cover' => $row->secondary_highlight_cover,
          'main_portal' => $row->main_highlight_portal,
          'secondary_portal' => $row->secondary_highlight_portal,
          'special' => $row->special_highlight,
        ],
        // xmlsitemap
        'xmlsitemap' => [
          'included' => $row->xmlsitemap_included, // Included just in case, although it seems to be the same value for all resources
          'priority' => $row->xmlsitemap_priority, // Included just in case, although it seems to be the same value for all resources
        ],
        // Location
        'location' => [
          'lid' => $row->lid,
          'location_name' => $row->location_name,
          'location_street' => $row->location_street,
          'location_pc' => $row->location_pc,
          'location_city' => $row->location_city,
          'location_province' => $row->location_province,
          'location_country' => $row->location_country,
          'location_longitude' => $row->location_longitude,
          'location_latitude' => $row->location_latitude,
          'location_additional' => $row->location_additional,
        ],
        // Votes. Probably not useful, I can't see where this is used in the nodes that it is added
        'votes' => $row->votes,
        // Metatags
        // 'metatags' => $row->metatags,
        // Author field (text)
        'author_text' => $row->author_text,
        // Tags
        'tags' => new stdClass(),
        // Secondary images
        'secondary_images' => [],
      ];

    // Add a flag (the nid) to $nids array, to manage duplicated node registries afterwerds
    array_push($nids, $row->nid);

    // Adding the first subtitle
    if ($row->subtitle && !in_array($row->subtitle, $item['subtitles'])) {
      array_push($item['subtitles'], $row->subtitle);
    }

     // Adding the first content
     if ($row->content && !in_array($row->content, $item['contents'])) {
      array_push($item['contents'], $row->content);
    }

     // Adding the first tag
     $tid = $row->tag_tid;
     $tags = $item['tags'];
     if ($row->tag_tid && !property_exists($tags, $tid)) {
      $tags->$tid = $row->tag_name;
    }

     //Adding the first secondary image
     if ($row->secondary_img_fid && !array_key_exists($row->secondary_img_fid, $item['secondary_images'])) {
      $item['secondary_images'][$row->secondary_img_fid] = [
        'uri' => $row->secondary_img_uri ? file_create_url($row->secondary_img_uri) : null,
        'filename' => $row->secondary_img_filename ? $row->secondary_img_filename : null,
        'filemime' => $row->secondary_img_filemime ? $row->secondary_img_filemime : null,
        'alt' => $row->secondary_img_alt ? $row->secondary_img_alt : null,
        'title' => $row->secondary_img_title ? $row->secondary_img_title : null,
        'author' => $row->secondary_img_author ? $row->secondary_img_author : null,
        'caption_default' => $row->secondary_img_title ? $row->secondary_img_title : null,
        'caption_custom' => $row->secondary_img_caption === '--Peu de foto--' ? null : $row->secondary_img_caption,
        'tags' => $row->secondary_img_tags ? [$row->secondary_img_tags] : [],
      ];
    }

     // Add item's data to $data array
     $data[$row->nid] = (object)$item;
  }
  else {
    // Adding additional subtitles
    if ($row->subtitle && !in_array($row->subtitle, $data[$row->nid]->subtitles)) {
      array_push($data[$row->nid]->subtitles, $row->subtitle);
    }

    // Adding additional contents
    if ($row->content && !in_array($row->content, $data[$row->nid]->contents)) {
      array_push($data[$row->nid]->contents, $row->content);
    }

    // Adding additional tags
    $tid = $row->tag_tid;
    $tags = $data[$row->nid]->tags;
    if ($row->tag_tid && !property_exists($tags, $tid)) {
     $tags->$tid = $row->tag_name;
   }

    //Adding additional secondary images
    if ($row->secondary_img_fid && !array_key_exists($row->secondary_img_fid, $data[$row->nid]->secondary_images)) {
      array_push($data[$row->nid]->secondary_images,
      [
        'uri' => $row->secondary_img_uri ? file_create_url($row->secondary_img_uri) : null,
        'filename' => $row->secondary_img_filename ? $row->secondary_img_filename : null,
        'filemime' => $row->secondary_img_filemime ? $row->secondary_img_filemime : null,
        'alt' => $row->secondary_img_alt ? $row->secondary_img_alt : null,
        'title' => $row->secondary_img_title ? $row->secondary_img_title : null,
        'author' => $row->secondary_img_author ? $row->secondary_img_author : null,
        'caption_default' => $row->secondary_img_title ? $row->secondary_img_title : null,
        'caption_custom' => $row->secondary_img_caption === '--Peu de foto--' ? null : $row->secondary_img_caption,
        'tags' => $row->secondary_img_tags ? [$row->secondary_img_tags] : [],
      ]);
    }

  }

}

// Iteration to group each subtitle with its content once the query is over
foreach ($data as $index) {
  for ($i = 0; $i < count($index->subtitles); $i++) {
      $index->sections->$i = new stdClass();
      $index->sections->$i->title = $index->subtitles[$i];
      $index->sections->$i->content = $index->contents[$i];
    }
}

  // Return data in JSON format
  drupal_json_output(array_values($data));
}
